<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2010, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>
<!--
			Drivers
			 MySQL Driver  com.mysql.jdbc.Driver 
             SQLServer Driver  com.microsoft.sqlserver.jdbc.SQLServerDriver
             Oracle Driver  oracle.jdbc.driver.OracleDriver
             Sybase Driver net.sourceforge.jtds.jdbc.Driver
             ENIQ Driver com.sybase.jdbc3.jdbc.SybDriver
            
            URLs
            MySQL URL  Properties props = new Properties();
								props.setProperty("user", userName);
								props.setProperty("password", password);
								jdbc:mysql://serverIP:port/dbName, props)
			 SQLServer URL  jdbc:sqlserver://" + serverIP + ":" + port + ";DatabaseName=" + dbName + ";user=" + userName + ";password=" + password + ";useUnicode=true;characterEncoding=UTF-8;");
			 SQLServer Secure URL  jdbc:sqlserver://" + serverIP + ":" + port + ";DatabaseName=" + dbName + ";integratedSecurity=true;authenticationScheme=JavaKerberos;");
			 Oracle URL  jdbc:oracle:thin:@" + serverIP + ":" + port + ":" + dbName, userName, password);
			 Sybase URL jdbc:jtds:sybase://" + serverIP + ":" + port + "/" + dbName, userName, password);
			 ENIQ URL jdbc:sybase:Tds:" + serverIP + ":" + port + "/" + dbName, userName, password);
            
  -->

        <!-- Database connection settings -->
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/sultan</property>
        <property name="connection.username">root</property>
        <property name="connection.password">root</property>

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>

        <!-- SQL dialect (Language) 
  	        This property makes Hibernate generate the appropriate SQL 
  	        for the chosen database.-->
        <property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>

        <!-- Disable the second-level cache  -->
        <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>

        <!-- Echo all executed SQL to stdout -->
        <property name="show_sql">true</property>

        <!-- Drop and re-create the database schema on startup create/update -->
        <property name="hbm2ddl.auto">update</property>

		<!--Names, the annotated entity class (Model Class(es)) -->
        <mapping class="main.java.CompleteMessengerREST.model.Message"/>

    </session-factory>

</hibernate-configuration>