/*
    System: BlueTruth Outstation
    Language/Build: MS VC 2008 / Linux GCC 4.2+
    Description:
    Modification History:

    Date        Who     SCJS No     Remarks
    31/05/2013  RG      001         V1.00 First Issue
 */

#ifndef _OUTSTATION_SETTINGS_DIALOG_H_
#define _OUTSTATION_SETTINGS_DIALOG_H_

//!
//! @file
//! Subclass of SettingsDialog, which is generated by wxFormBuilder.
//!

#include "wxFormBuilderClasses.h"
#include "applicationconfiguration.h"
#include "keypresshandler.h"
#include "iobservable.h"

#include <boost/shared_ptr.hpp>


class LogHandler;

namespace Model
{
    class DataContainer;
}


namespace View
{

class OutStationConfigurationParameters;

class OutStationSettingsDialog : 
    public SettingsDialog, 
    public KeyPressHandler, 
    public ::IObservable
{
public:
    //! Constructor
    OutStationSettingsDialog(
        wxWindow* pParent,
        OutStationConfigurationParameters& configurationParameters,
        LogHandler& logHandler);

    //! Destructor
    virtual ~OutStationSettingsDialog();

    void setup(boost::shared_ptr<Model::DataContainer> pDataContainer);

    virtual bool onKeyPressed(const wxKeyEvent& ev);

private:
    //! default constructor. Not implemented
    OutStationSettingsDialog();
    //! copy constructor. Not implemented
    OutStationSettingsDialog(const OutStationSettingsDialog& rhs);
    //! copy assignment operator. Not implemented
    OutStationSettingsDialog& operator=(const OutStationSettingsDialog& rhs);

    // Handlers for SettingsDialog events.
    virtual void onInit( wxInitDialogEvent& ev );
    virtual void onClose( wxCloseEvent& ev );
    virtual void onResetToDefaultsClick( wxCommandEvent& ev );
    virtual void onClickOk( wxCommandEvent& ev );
    virtual void onClickCancel( wxCommandEvent& ev );

    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual bool Validate();

    void populateWidgets();

    //Private members:
    OutStationConfigurationParameters& m_configurationParameters;
    boost::shared_ptr<Model::DataContainer> m_pDataContainer;

    wxString m_errorText;

    LogHandler& m_logHandler;
};

} //namespace

#endif // _OUTSTATION_SETTINGS_DIALOG_H_
